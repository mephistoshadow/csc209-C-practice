Script started on Fri 23 Mar 2018 04:17:55 PM EDT
You have mail.
b3195-04:~/workspace/209/yangsiq1/lab10% gdb buf server[Kr

GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break main
Breakpoint 1 at 0x400bce: file bufserver.c, line 18.
(gdb) display buf
No symbol "buf" in current context.
(gdb) run
Starting program: /h/u4/c5/03/yangsiq1/workspace/209/yangsiq1/lab10/bufserver 

Breakpoint 1, main () at bufserver.c:18
18	int main() {
(gdb) display buf
1: buf = 0x0
(gdb) display inbuf [K
No symbol "inbuf" in current context.
(gdb) display inbuf
(gdb) next
21	    setbuf(stdout, NULL);
1: buf = 0x0
(gdb) next
23	    struct sockaddr_in *self = init_server_addr(PORT);
1: buf = 0x0
(gdb) next
24	    int listenfd = set_up_server_socket(self, 5);
1: buf = 0x0
(gdb) next
27	        int fd = accept_connection(listenfd);
1: buf = 0x0
(gdb) next
Waiting for a new connection...
New connection accepted from 127.0.0.1:34732
28	        if (fd < 0) {
1: buf = 0x0
(gdb) next
33	        char buf[BUFSIZE] = {'\0'};
1: buf = 0x0
(gdb) next
34	        int inbuf = 0;           // How many bytes currently in buffer?
1: buf = 0x0
(gdb) next
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
1: buf = 0x0
(gdb) display inbuf
2: inbuf = 0
(gdb) display inbuf
3: inbuf = 0
(gdb)next
36	        char *after = buf;       // Pointer to position after the data in buf
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
41	            inbuf = nbytes + inbuf;
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
56	                buf[where-1] = '\0';
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
57	                printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
Next message: A stitch in time

64	                inbuf = inbuf - where;
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
65	                memmove(buf,&buf[where],inbuf);
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
72	            after = &buf[inbuf];
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
73	            room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
41	            inbuf = nbytes + inbuf;
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
56	                buf[where-1] = '\0';
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
57	                printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
Next message: A stitch in time

64	                inbuf = inbuf - where;
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
65	                memmove(buf,&buf[where],inbuf);
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
72	            after = &buf[inbuf];
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
73	            room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
41	            inbuf = nbytes + inbuf;
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
56	                buf[where-1] = '\0';
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
57	                printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
Next message: A stitch in time

64	                inbuf = inbuf - where;
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
65	                memmove(buf,&buf[where],inbuf);
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
72	            after = &buf[inbuf];
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
73	            room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
41	            inbuf = nbytes + inbuf;
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
56	                buf[where-1] = '\0';
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
57	                printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
Next message: A stitch in time

64	                inbuf = inbuf - where;
1: buf = 0x0
2: inbuf = 30
3: inbuf = 30
(gdb) next
65	                memmove(buf,&buf[where],inbuf);
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
72	            after = &buf[inbuf];
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
73	            room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
41	            inbuf = nbytes + inbuf;
1: buf = 0x0
2: inbuf = 12
3: inbuf = 12
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 18
3: inbuf = 18
(gdb) next
56	                buf[where-1] = '\0';
1: buf = 0x0
2: inbuf = 18
3: inbuf = 18
(gdb) next
57	                printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 18
3: inbuf = 18
(gdb) next
Next message: A stitch in time

64	                inbuf = inbuf - where;
1: buf = 0x0
2: inbuf = 18
3: inbuf = 18
(gdb) next
65	                memmove(buf,&buf[where],inbuf);
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
50	            while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
72	            after = &buf[inbuf];
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
73	            room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
78	        close(fd);
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
27	        int fd = accept_connection(listenfd);
1: buf = 0x0
2: inbuf = 0
3: inbuf = 0
(gdb) next
Waiting for a new connection...
^[[A
^C
Program received signal SIGINT, Interrupt.
0x00007ffff7b150a0 in __accept_nocancel () at ../sysdeps/unix/syscall-template.S:84
84      ../sysdeps/unix/syscall-template.S: No such file or directory.
1: buf = 0x0
(gdb) quit
A debugging session is active.

        Inferior 1 [process 25684] will be killed.

Quit anyway? (y or n) y
b3195-04:~/workspace/209/yangsiq1/lab10% exit
exit
Script done, file is server.2
